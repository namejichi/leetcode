class Solution {
public:
    int divide(int dividend, int divisor) {
        //不能用乘除和取模,可以用减法，直接一个个减肯定超时。。。所以可以用减法+左移
        //注意看http://blog.sina.com.cn/s/blog_6f6ef29b0101l5xx.html
        if (dividend == INT_MIN) {  //注意
            if (divisor == 1) {
                return dividend;
            }
            else if (divisor == -1) {
                return INT_MAX;
            }
            else if(divisor == INT_MIN) {
                return 1;
            }
        }
        if (divisor == INT_MIN) {  //注意
            return 0;
        }
        int result = 0;
        int sign = ((dividend > 0) ^ (divisor > 0)) ? 0 : 1; //注意！
        long long dividend_abs = abs((long long)dividend);
        long long divisor_abs = abs((long long)divisor);  //注意abs内必须加long long，因为INT_MIN直接取abs还是INT_MIN
        while (dividend_abs >= divisor_abs) {
            long long tmp = 1;
            long long d = divisor_abs;
            while (dividend_abs >= (d << 1)) {
                d = d << 1;
                tmp = tmp << 1;
            }
            dividend_abs -= d;
            result += tmp;
        }
        return sign ? result : -result;
    }
};
