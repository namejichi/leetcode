class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int i = nums.size() - 1;
        while (i - 1 >= 0 && nums[i - 1] >= nums[i]) {
            i--;
        }
        if (i == 0) {
            reverse(nums, 0, nums.size() - 1);
            return;
        }
        int pos1 = i - 1;
        int j = nums.size() - 1;
        while (j > pos1 && nums[j] <= nums[pos1]) {
            j--;
        }
        int pos2 = j;
        swap(nums[pos1], nums[pos2]);
        reverse(nums, i, nums.size() - 1);
        return;
    }
    void reverse(vector<int>& nums, int start, int end) {
        while (start < end) {
            int tmp = nums[start];
            nums[start] = nums[end];
            nums[end] = tmp;
            start++;
            end--;
        }
    }
};
