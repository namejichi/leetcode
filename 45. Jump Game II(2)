class Solution {
public:
    int jump(vector<int>& nums) {
        //DP需要O(N^2),看了discuss，O(N)的方法即BFS（或者说贪心），https://leetcode.com/discuss/10588/o-n-bfs-solution
        int size = nums.size();
        if (size <= 1) {
            return 0;
        }
        int i = 0;
        int curMax = 0;
        int nextMax = 0;
        int step = 0;
        while (curMax >= i) {
            step++;
            for (; i <= curMax; i++) {
                nextMax = max(nextMax, nums[i] + i);
                if (nextMax >= size - 1) {
                    return step;
                }
            }
            curMax = nextMax;
        }
        return -1;
    }
};
