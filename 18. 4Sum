class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        if (nums.size() < 4) {
            return res;
        }
        sort(nums.begin(), nums.end());
        vector<int> cur(4, 0);
        for (int i = 0; i < nums.size(); i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int num1 = nums[i];
            for (int j = i + 1; j < nums.size(); j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) {
                    continue;
                }
                int num2 = nums[j];
                int l = j + 1;
                int r = nums.size() - 1;
                while (l < r) {
                    if (num1 + num2 + nums[l] + nums[r] == target) {
                        cur[0] = num1;
                        cur[1] = num2;
                        cur[2] = nums[l];
                        cur[3] = nums[r];
                        res.push_back(cur);
                        while (l < r && cur[2] == nums[l]) {
                            l++;
                        } 
                    }
                    else if (num1 + num2 + nums[l] + nums[r] > target) {
                        r--;
                    }
                    else {
                        l++;
                    }
                }
            }
        }
        return res;
    }
};
